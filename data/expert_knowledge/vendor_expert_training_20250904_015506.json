[
  {
    "case_id": "VENDOR_EXPERT_0001",
    "title": "Vendor Expert: Cisco BGP Configuration Guide",
    "category": "BGP",
    "technology": "BGP - Cisco",
    "description": "Read Me First Cisco BGP Overview BGP 4 Configuring a Basic BGP Network BGP 4 Soft Configuration BGP Support for 4-byte ASN IPv6 Routing: Multiprotocol BGP Extensions for IPv6 IPv6 Routing: Multiprotocol BGP Link-Local Address Peering IPv6 Multicast Address Family Support for Multiprotocol BGP Configuring Multiprotocol BGP (MP-BGP) Support for CLNS BGP IPv6 Admin Distance Connecting to a Service Provider Using External BGP BGP Route-Map Continue BGP Route-Map Continue Support for Outbound Policy Removing Private AS Numbers from the AS Path in BGP Configuring BGP Neighbor Session Options BGP Neighbor Policy BGP Dynamic Neighbors BGP Support for Next-Hop Address Tracking BGP Restart Neighbor Session After Max-Prefix Limit Reached BGP Support for Dual AS Configuration for Network AS Migrations Configuring Internal BGP Features BGP VPLS Auto Discovery Support on Route Reflector BGP FlowSpec Route-reflector Support BGP Flow Specification Client BGP NSF Awareness BGP Graceful Restart per Neig...",
    "full_content": "Read Me First Cisco BGP Overview BGP 4 Configuring a Basic BGP Network BGP 4 Soft Configuration BGP Support for 4-byte ASN IPv6 Routing: Multiprotocol BGP Extensions for IPv6 IPv6 Routing: Multiprotocol BGP Link-Local Address Peering IPv6 Multicast Address Family Support for Multiprotocol BGP Configuring Multiprotocol BGP (MP-BGP) Support for CLNS BGP IPv6 Admin Distance Connecting to a Service Provider Using External BGP BGP Route-Map Continue BGP Route-Map Continue Support for Outbound Policy Removing Private AS Numbers from the AS Path in BGP Configuring BGP Neighbor Session Options BGP Neighbor Policy BGP Dynamic Neighbors BGP Support for Next-Hop Address Tracking BGP Restart Neighbor Session After Max-Prefix Limit Reached BGP Support for Dual AS Configuration for Network AS Migrations Configuring Internal BGP Features BGP VPLS Auto Discovery Support on Route Reflector BGP FlowSpec Route-reflector Support BGP Flow Specification Client BGP NSF Awareness BGP Graceful Restart per Neighbor BGP Support for BFD IPv6 NSF and Graceful Restart for MP-BGP IPv6 Address Family BGP Link Bandwidth Border Gateway Protocol Link-State iBGP Multipath Load Sharing BGP Multipath Load Sharing for Both eBGP and iBGP in an MPLS-VPN Loadsharing IP Packets over More Than Six Parallel Paths BGP Policy Accounting BGP Policy Accounting Output Interface Accounting BGP Cost Community BGP Support for IP Prefix Import from Global Table into a VRF Table BGP Support for IP Prefix Export from a VRF Table into the Global Table BGP per Neighbor SoO Configuration Per-VRF Assignment of BGP Router ID BGP Next Hop Unchanged BGP Support for the L2VPN Address Family BGP Event-Based VPN Import BGP Best External BGP PIC Edge for IP and MPLS-VPN Detecting and Mitigating a BGP Slow Peer Configuring BGP: RT Constrained Route Distribution Configuring a BGP Route Server BGP Diverse Path Using a Diverse-Path Route Reflector BGP Enhanced Route Refresh Configuring BGP Consistency Checker BGP—Origin AS Validation BGP MIB Support BGP 4 MIB Support for Per-Peer Received Routes BGP Support for Nonstop Routing (NSR) with Stateful Switchover (SSO) Using L2VPN VPLS BGP NSR Auto Sense BGP NSR Support for iBGP Peers BGP Graceful Shutdown BGP — mVPN BGP sAFI 129 - IPv4 BGP-MVPN SAFI 129 IPv6 BFD—BGP Multihop Client Support, cBit (IPv4 and IPv6), and Strict Mode BGP Attribute Filter and Enhanced Attribute Error Handling BGP Additional Paths BGP-Multiple Cluster IDs BGP-VPN Distinguisher Attribute BGP-RT and VPN Distinguisher Attribute Rewrite Wildcard VPLS BGP Signaling Multicast VPN BGP Dampening BGP—IPv6 NSR BGP-VRF-Aware Conditional Advertisement BGP—Selective Route Download BGP—Support for iBGP Local-AS eiBGP Multipath for Non-VRF Interfaces (IPv4/IPv6) L3VPN iBGP PE-CE BGP NSR Support for MPLS VPNv4 and VPNv6 Inter-AS Option B BGP-RTC for Legacy PE BGP PBB EVPN Route Reflector Support BGP Monitoring Protocol VRF Aware BGP Translate-Update BGP Support for MTR BGP Accumulated IGP BGP MVPN Source-AS Extended Community Filtering BGP AS-Override Split-Horizon BGP Support for Multiple Sourced Paths Per Redistributed Route Maintenance Function: BGP Routing Protocol",
    "source_url": "https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/iproute_bgp/configuration/xe-16/irg-xe-16-book/configuring-a-basic-bgp-network.html",
    "vendor_type": "Cisco",
    "source_category": "cisco_networking",
    "quality_score": 99,
    "confidence": 100,
    "expert_level": "expert",
    "has_config_examples": true,
    "config_examples": [
      "router bgp <AS>\n ! AF independent part\n neighbor <ip-address> <command> ! Session config; AF independent \n address-family ipv4 unicast\n  ! AF dependant part\n  neighbor <ip-address> <command> ! Policy config; AF dependant \n  exit-address-family \n address-family ipv4 multicast\n  ! AF dependant part\n  neighbor <ip-address> <command> ! Policy config; AF dependant\n  exit-address-family \n address-family ipv4 unicast vrf <vrf-name>\n  ! VRF specific AS independent commands\n  ! VRF specific AS dependant commands\n  neighbor <ip-address> <command> ! Session config; AF independent\n  neighbor <ip-address> <command> ! Policy config; AF dependant \n  exit-address-family",
      "router bgp <AS>\n ! AF independent part\n neighbor <ip-address> <command> ! Session config; AF independent \n address-family ipv4 unicast\n  ! AF dependant part\n  neighbor <ip-address> <command> ! Policy config; AF dependant \n  exit-address-family \n address-family ipv4 multicast\n  ! AF dependant part\n  neighbor <ip-address> <command> ! Policy config; AF dependant\n  exit-address-family \n address-family ipv4 unicast vrf <vrf-name>\n  ! VRF specific AS independent commands\n  ! VRF specific AS dependant commands\n  neighbor <ip-address> <command> ! Session config; AF independent\n  neighbor <ip-address> <command> ! Policy config; AF dependant \n  exit-address-family",
      "router bgp 45000\n router-id 172.17.1.99\n bgp log-neighbor-changes\n neighbor 192.168.1.2 remote-as 40000\n neighbor 192.168.3.2 remote-as 50000\n address-family ipv4 unicast\n  neighbor 192.168.1.2 activate\n  network 172.17.1.0 mask 255.255.255.0\n  exit-address-family\n address-family ipv4 multicast\n  neighbor 192.168.3.2 activate\n  neighbor 192.168.3.2 advertisement-interval 25\n  network 172.16.1.0 mask 255.255.255.0\n  exit-address-family\n address-family ipv4 vrf vpn1\n  neighbor 192.168.3.2 activate\n  network 172.21.1.0 mask 255.255.255.0\n  exit-address-family",
      "router bgp 45000\n router-id 172.17.1.99\n bgp log-neighbor-changes\n neighbor 192.168.1.2 remote-as 40000\n neighbor 192.168.3.2 remote-as 50000\n address-family ipv4 unicast\n  neighbor 192.168.1.2 activate\n  network 172.17.1.0 mask 255.255.255.0\n  exit-address-family\n address-family ipv4 multicast\n  neighbor 192.168.3.2 activate\n  neighbor 192.168.3.2 advertisement-interval 25\n  network 172.16.1.0 mask 255.255.255.0\n  exit-address-family\n address-family ipv4 vrf vpn1\n  neighbor 192.168.3.2 activate\n  network 172.21.1.0 mask 255.255.255.0\n  exit-address-family",
      "Device(config-router)# network 10.1.1.0 mask 255.255.255.0"
    ],
    "code_blocks": [
      "router bgp <AS>\n ! AF independent part\n neighbor <ip-address> <command> ! Session config; AF independent \n address-family ipv4 unicast\n  ! AF dependant part\n  neighbor <ip-address> <command> ! Policy config; AF dependant \n  exit-address-family \n address-family ipv4 multicast\n  ! AF dependant part\n  neighbor <ip-address> <command> ! Policy config; AF dependant\n  exit-address-family \n address-family ipv4 unicast vrf <vrf-name>\n  ! VRF specific AS independent commands\n  ! VRF specific AS dependant commands\n  neighbor <ip-address> <command> ! Session config; AF independent\n  neighbor <ip-address> <command> ! Policy config; AF dependant \n  exit-address-family",
      "router bgp <AS>\n ! AF independent part\n neighbor <ip-address> <command> ! Session config; AF independent \n address-family ipv4 unicast\n  ! AF dependant part\n  neighbor <ip-address> <command> ! Policy config; AF dependant \n  exit-address-family \n address-family ipv4 multicast\n  ! AF dependant part\n  neighbor <ip-address> <command> ! Policy config; AF dependant\n  exit-address-family \n address-family ipv4 unicast vrf <vrf-name>\n  ! VRF specific AS independent commands\n  ! VRF specific AS dependant commands\n  neighbor <ip-address> <command> ! Session config; AF independent\n  neighbor <ip-address> <command> ! Policy config; AF dependant \n  exit-address-family",
      "router bgp 45000\n router-id 172.17.1.99\n bgp log-neighbor-changes\n neighbor 192.168.1.2 remote-as 40000\n neighbor 192.168.3.2 remote-as 50000\n address-family ipv4 unicast\n  neighbor 192.168.1.2 activate\n  network 172.17.1.0 mask 255.255.255.0\n  exit-address-family\n address-family ipv4 multicast\n  neighbor 192.168.3.2 activate\n  neighbor 192.168.3.2 advertisement-interval 25\n  network 172.16.1.0 mask 255.255.255.0\n  exit-address-family\n address-family ipv4 vrf vpn1\n  neighbor 192.168.3.2 activate\n  network 172.21.1.0 mask 255.255.255.0\n  exit-address-family",
      "router bgp 45000\n router-id 172.17.1.99\n bgp log-neighbor-changes\n neighbor 192.168.1.2 remote-as 40000\n neighbor 192.168.3.2 remote-as 50000\n address-family ipv4 unicast\n  neighbor 192.168.1.2 activate\n  network 172.17.1.0 mask 255.255.255.0\n  exit-address-family\n address-family ipv4 multicast\n  neighbor 192.168.3.2 activate\n  neighbor 192.168.3.2 advertisement-interval 25\n  network 172.16.1.0 mask 255.255.255.0\n  exit-address-family\n address-family ipv4 vrf vpn1\n  neighbor 192.168.3.2 activate\n  network 172.21.1.0 mask 255.255.255.0\n  exit-address-family",
      "Received route refresh capability from peer.",
      "Received route refresh capability from peer.",
      "template peer-session SESSION-TEMPLATE-ONE \n remote-as 1\n exit peer-session",
      "template peer-session SESSION-TEMPLATE-ONE \n remote-as 1\n exit peer-session",
      "Device# configure terminal",
      "Device# configure terminal"
    ],
    "content_length": 3161,
    "created_at": "2025-09-04T01:55:06.504885"
  },
  {
    "case_id": "VENDOR_EXPERT_0002",
    "title": "Vendor Expert: Cisco OSPF Configuration",
    "category": "OSPF",
    "technology": "OSPF - Cisco",
    "description": "Read Me First Configuring OSPF IPv6 Routing: OSPFv3 IPv6 Routing: OSPFv3 Authentication Support with IPsec OSPFv2 Cryptographic Authentication OSPFv3 External Path Preference Option OSPFv3 Graceful Restart Graceful Shutdown Support for OSPFv3 OSPF Stub Router Advertisement OSPF Update Packet-Pacing Configurable Timers OSPF Sham-Link Support for MPLS VPN OSPF Support for Multi-VRF on CE Routers OSPFv2 Multiarea Adjacency OSPFv2 Autoroute Exclude OSPFv3 Address Families OSPFv3 Authentication Trailer Autoroute Announce and Forwarding Adjacencies For OSPFv3 OSPFv3 Autoroute Exclude OSPFv2 IP FRR Local Microloop Avoidance OSPFv2-OSPF Live-Live OSPF Forwarding Address Suppression in Translated Type-5 LSAs OSPF Inbound Filtering Using Route Maps with a Distribute List OSPFv3 Route Filtering Using Distribute-List OSPF Shortest Path First Throttling OSPF Support for Fast Hello Packets OSPF Incremental SPF OSPF Limit on Number of Redistributed Routes OSPFv3 Fast Convergence: LSA and SPF Throttli...",
    "full_content": "Read Me First Configuring OSPF IPv6 Routing: OSPFv3 IPv6 Routing: OSPFv3 Authentication Support with IPsec OSPFv2 Cryptographic Authentication OSPFv3 External Path Preference Option OSPFv3 Graceful Restart Graceful Shutdown Support for OSPFv3 OSPF Stub Router Advertisement OSPF Update Packet-Pacing Configurable Timers OSPF Sham-Link Support for MPLS VPN OSPF Support for Multi-VRF on CE Routers OSPFv2 Multiarea Adjacency OSPFv2 Autoroute Exclude OSPFv3 Address Families OSPFv3 Authentication Trailer Autoroute Announce and Forwarding Adjacencies For OSPFv3 OSPFv3 Autoroute Exclude OSPFv2 IP FRR Local Microloop Avoidance OSPFv2-OSPF Live-Live OSPF Forwarding Address Suppression in Translated Type-5 LSAs OSPF Inbound Filtering Using Route Maps with a Distribute List OSPFv3 Route Filtering Using Distribute-List OSPF Shortest Path First Throttling OSPF Support for Fast Hello Packets OSPF Incremental SPF OSPF Limit on Number of Redistributed Routes OSPFv3 Fast Convergence: LSA and SPF Throttling OSPFv3 Max-Metric Router LSA OSPF Link-State Advertisement Throttling OSPF Support for Unlimited Software VRFs per PE Router OSPF Area Transit Capability OSPF Per-Interface Link-Local Signaling OSPF Link-State Database Overload Protection OSPF MIB Support of RFC 1850 and Latest Extensions OSPF Enhanced Traffic Statistics TTL Security Support for OSPFv3 on IPv6 Configuring OSPF TTL Security Check and OSPF Graceful Shutdown OSPF Sham-Link MIB Support OSPF SNMP ifIndex Value for Interface ID in Data Fields OSPFv2 Local RIB OSPF Support for Forwarding Adjacencies over MPLS TE Tunnels Enabling OSPFv2 on an Interface Basis OSPF Nonstop Routing OSPFv3 NSR OSPFv2 Loop-Free Alternate Fast Reroute OSPFv3 MIB Prefix Suppression Support for OSPFv3 OSPFv3 VRF-Lite/PE-CE OSPFv3 ABR Type 3 LSA Filtering OSPFv3 Demand Circuit Ignore OSPF IPv4 Remote Loop-Free Alternate IP Fast Reroute OSPFv3 Multiarea Adjacency OSPF Limiting Adjacency Formations",
    "source_url": "https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/iproute_ospf/configuration/xe-16/iro-xe-16-book/iro-cfg.html",
    "vendor_type": "Cisco",
    "source_category": "cisco_networking",
    "quality_score": 99,
    "confidence": 100,
    "expert_level": "expert",
    "has_config_examples": true,
    "config_examples": [
      "Device(config-router)# network 192.168.129.16 0.0.0.3 area 20",
      "Device(config-if)# ip ospf message-digest-key 1 md5 23456789",
      "Device(config-if)# ip ospf authentication message-digest",
      "Device#(config-if) ip ospf network point-to-multipoint",
      "Device#(config-router) neighbor 192.168.3.4 cost 180"
    ],
    "code_blocks": [
      "Device# configure terminal",
      "Device(config)# router ospf 109",
      "Device(config-router)# network 192.168.129.16 0.0.0.3 area 20",
      "Device(config-router)# end",
      "Device# configure terminal",
      "Device(config)# interface Gigabitethernet 0/0",
      "Device(config-if)# ip ospf cost 65",
      "Device(config-if)# ip ospf retransmit-interval 1",
      "Device(config-if)# ip ospf transmit-delay",
      "Device(config-if)# ip ospf priority 1"
    ],
    "content_length": 1946,
    "created_at": "2025-09-04T01:55:06.504924"
  },
  {
    "case_id": "VENDOR_EXPERT_0003",
    "title": "Vendor Expert: OWASP Web Security Testing Guide",
    "category": "Web Security",
    "technology": "Web Security - OWASP",
    "description": "OWASP Web Security Testing Guide The Web Security Testing Guide (WSTG) Project produces the premier cybersecurity testing resource for web application developers and security professionals. The WSTG is a comprehensive guide to testing the security of web applications and web services. Created by the collaborative efforts of cybersecurity professionals and dedicated volunteers, the WSTG provides a framework of best practices used by penetration testers and organizations all over the world. Contributions Any contributions to the guide itself should be made via the guide’s project repo. Contributions should only be made in the proper repo against the latest content. Please don’t open PRs here for versioned or stable content, they represent point-in-time state. Stable View the always-current stable version at stable. Latest We are currently developing release version 5.0. You can read the latest development documents in our official GitHub repository or view the bleeding-edge content at la...",
    "full_content": "OWASP Web Security Testing Guide The Web Security Testing Guide (WSTG) Project produces the premier cybersecurity testing resource for web application developers and security professionals. The WSTG is a comprehensive guide to testing the security of web applications and web services. Created by the collaborative efforts of cybersecurity professionals and dedicated volunteers, the WSTG provides a framework of best practices used by penetration testers and organizations all over the world. Contributions Any contributions to the guide itself should be made via the guide’s project repo. Contributions should only be made in the proper repo against the latest content. Please don’t open PRs here for versioned or stable content, they represent point-in-time state. Stable View the always-current stable version at stable. Latest We are currently developing release version 5.0. You can read the latest development documents in our official GitHub repository or view the bleeding-edge content at latest. Versioned Releases v4.2 is currently available as a web-hosted release and PDF. Previous releases are available as PDFs and in some cases web content via the Release Versions tab. How To Reference WSTG Scenarios Each scenario has an identifier in the format WSTG-<category>-<number>, where: ‘category’ is a 4 character upper case string that identifies the type of test or weakness, and ‘number’ is a zero-padded numeric value from 01 to 99. For example:WSTG-INFO-02 is the second Information Gathering test. The identifiers may change between versions therefore it is preferable that other documents, reports, or tools use the format: WSTG-<version>-<category>-<number>, where: ‘version’ is the version tag with punctuation removed. For example: WSTG-v41-INFO-02 would be understood to mean specifically the second Information Gathering test from version 4.1. If identifiers are used without including the <version> element then they should be assumed to refer to the latest Web Security Testing Guide content. Obviously as the guide grows and changes this becomes problematic, which is why writers or developers should include the version element. Linking Linking to Web Security Testing Guide scenarios should be done using versioned links not stable or latest which will definitely change with time. However, it is the project team’s intention that versioned links not change. For example: https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server. Note: the v42 element refers to version 4.2. Stable View the always-current stable version at stable. [Unreleased 4.3] [Version 4.2] - 2020-12-03 Version 4.2 introduces new testing scenarios, updates existing chapters, and offers an improved writing style and chapter layout. Download the v4.2 PDF here. [Version 4.1] - 2020-04-21 Version 4.1 serves as a post-migration stable version under the new GitHub repository workflow. Download the v4.1 PDF here. [Version 4.0] - 2014-09-17 Download the v4 PDF here. A printed book is also made available for purchase. [Version 3.0] - 2008-12-16 Download the v3 PDF here. [Pre-release 3.0] - 2008-11-06 View a presentation (PPT) previewing the release at the OWASP EU Summit 2008 in Portugal. [Version 2.0] - 2007-02-10 Download the v2 PDF here. The guide is also available in Word Document format in English (ZIP) as well as Word Document format translation in Spanish (ZIP). [Version 1.1] - 2004-08-14 Version 1.1 is released as the OWASP Web Application Penetration Checklist. Download the v1.1 PDF here. [Version 1.0] - 2004-12-10 Download the v1 PDF here. Archives Historical archives of the Mailman owasp-testing mailing list are available to view or download. How can I help? We are actively inviting new contributors to help keep the WSTG up to date! You can get started at our official GitHub repository. How can I contact you? To report issues or make suggestions for the WSTG, please use GitHub Issues. For everything else, we’re easy to find on Slack: Join the OWASP Group Slack with this invitation link. Join this project’s channel, #testing-guide. You can @ us on Twitter @owasp_wstg. Watch Star The OWASP® Foundation works to improve the security of software through its community-led open source software projects, hundreds of chapters worldwide, tens of thousands of members, and by hosting local and global conferences. Project Classification Flagship Project Documentation Breaker Builder Project Links Latest GitHub Repository Getting Involved Code of Conduct Contribution Guide Social Join OWASP Slack Channel: #testing-guide Twitter: @owasp_wstg BlueSky: @owasp-wstg.bsky.social License CC BY-SA 4.0 Leaders Elie Saad Rick Mitchell Upcoming OWASP Global Events",
    "source_url": "https://owasp.org/www-project-web-security-testing-guide/",
    "vendor_type": "OWASP",
    "source_category": "cybersecurity_expert",
    "quality_score": 99,
    "confidence": 100,
    "expert_level": "expert",
    "has_config_examples": false,
    "config_examples": [],
    "code_blocks": [
      "WSTG-<category>-<number>",
      "WSTG-<version>-<category>-<number>",
      "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"
    ],
    "content_length": 4772,
    "created_at": "2025-09-04T01:55:06.504947"
  },
  {
    "case_id": "VENDOR_EXPERT_0004",
    "title": "Vendor Expert: MITRE Process Injection Techniques",
    "category": "Threat Intelligence",
    "technology": "Threat Intelligence - MITRE",
    "description": "ATT&CKcon 6.0 is coming October 14-15 in McLean, VA and live online. Tickets are available now! Home Techniques Enterprise Process Injection Process Injection Sub-techniques (12) ID Name T1055.001 Dynamic-link Library Injection T1055.002 Portable Executable Injection T1055.003 Thread Execution Hijacking T1055.004 Asynchronous Procedure Call T1055.005 Thread Local Storage T1055.008 Ptrace System Calls T1055.009 Proc Memory T1055.011 Extra Window Memory Injection T1055.012 Process Hollowing T1055.013 Process Doppelgänging T1055.014 VDSO Hijacking T1055.015 ListPlanting Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade...",
    "full_content": "ATT&CKcon 6.0 is coming October 14-15 in McLean, VA and live online. Tickets are available now! Home Techniques Enterprise Process Injection Process Injection Sub-techniques (12) ID Name T1055.001 Dynamic-link Library Injection T1055.002 Portable Executable Injection T1055.003 Thread Execution Hijacking T1055.004 Asynchronous Procedure Call T1055.005 Thread Local Storage T1055.008 Ptrace System Calls T1055.009 Proc Memory T1055.011 Extra Window Memory Injection T1055.012 Process Hollowing T1055.013 Process Doppelgänging T1055.014 VDSO Hijacking T1055.015 ListPlanting Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. There are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. More sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ID: T1055 Sub-techniques: T1055.001, T1055.002, T1055.003, T1055.004, T1055.005, T1055.008, T1055.009, T1055.011, T1055.012, T1055.013, T1055.014, T1055.015 ⓘ Tactics: Defense Evasion, Privilege Escalation ⓘ Platforms: Linux, Windows, macOS Contributors: Anastasios Pingios; Christiaan Beek, @ChristiaanBeek; Ryan Becwar Version: 1.4 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Procedure Examples ID Name Description C0028 2015 Ukraine Electric Power Attack During the 2015 Ukraine Electric Power Attack, Sandworm Team loaded BlackEnergy into svchost.exe, which then launched iexplore.exe for their C2. [1] S0469 ABK ABK has the ability to inject shellcode into svchost.exe.[2] S0331 Agent Tesla Agent Tesla can inject into known, vulnerable binaries on targeted hosts.[3] S1074 ANDROMEDA ANDROMEDA can inject into the wuauclt.exe process to perform C2 actions.[4] G0050 APT32 APT32 malware has injected a Cobalt Strike beacon into Rundll32.exe.[5] G0067 APT37 APT37 injects its malware variant, ROKRAT, into the cmd.exe process.[6] G0082 APT38 APT38 has injected malicious payloads into the explorer.exe process.[7] G0096 APT41 APT41 malware TIDYELF loaded the main WINTERLOVE component by injecting it into the iexplore.exe process.[8] G1023 APT5 APT5 has used the CLEANPULSE utility to insert command line strings into a targeted process to alter its functionality.[9] C0046 ArcaneDoor ArcaneDoor included injecting code into the AAA and Crash Dump processes on infected Cisco ASA devices.[10] S0438 Attor Attor's dispatcher can inject itself into running processes to gain higher privileges and to evade detection.[11] S0347 AuditCred AuditCred can inject code from files to other running processes.[12] S0473 Avenger Avenger has the ability to inject shellcode into svchost.exe.[2] S0093 Backdoor.Oldrea Backdoor.Oldrea injects itself into explorer.exe.[13][14] S1081 BADHATCH BADHATCH can inject itself into an existing explorer.exe process by using RtlCreateUserThread.[15][16] S0534 Bazar Bazar can inject code through calling VirtualAllocExNuma.[17] S0470 BBK BBK has the ability to inject shellcode into svchost.exe.[2] G1043 BlackByte BlackByte has injected Cobalt Strike into wuauclt.exe during intrusions.[18] BlackByte has injected ransomware into svchost.exe before encryption.[19] S1181 BlackByte 2.0 Ransomware BlackByte 2.0 Ransomware injects into a newly-created svchost.exe process prior to device encryption.[20] S1039 Bumblebee Bumblebee can inject code into multiple processes on infected endpoints.[21] S0348 Cardinal RAT Cardinal RAT injects into a newly spawned process created from a native Windows executable.[22] S0660 Clambling Clambling can inject into the svchost.exe process for execution.[23] S1105 COATHANGER COATHANGER includes a binary labeled authd that can inject a library into a running process and then hook an existing function within that process with a new function from that library.[24] G0080 Cobalt Group Cobalt Group has injected code into trusted processes.[25] S0154 Cobalt Strike Cobalt Strike can inject a variety of payloads into processes dynamically chosen by the adversary.[26][27][28] S0614 CostaBricks CostaBricks can inject a payload into the memory of a compromised host.[29] C0029 Cutting Edge During Cutting Edge, threat actors used malicious SparkGateway plugins to inject shared objects into web process memory on compromised Ivanti Secure Connect VPNs to enable deployment of backdoors.[30] S0695 Donut Donut includes a subproject DonutTest to inject shellcode into a target process.[31] S1159 DUSTTRAP DUSTTRAP compromises the .text section of a legitimate system DLL in %windir% to hold the contents of retrieved plug-ins.[32] S0024 Dyre Dyre has the ability to directly inject its code into the web browser process.[33] S0554 Egregor Egregor can inject its payload into iexplore.exe process.[34] S0363 Empire Empire contains multiple modules for injecting into processes, such as Invoke-PSInject.[35] S0168 Gazer Gazer injects its communication module into an Internet accessible process through which it performs C2.[36][37] S0032 gh0st RAT gh0st RAT can inject malicious code into process created by the \"Command_Create&Inject\" function.[38] S0561 GuLoader GuLoader has the ability to inject shellcode into a donor processes that is started in a suspended state. GuLoader has previously used RegAsm as a donor process.[39] S0376 HOPLIGHT HOPLIGHT has injected into running processes.[40] S0040 HTRAN HTRAN can inject into into running processes.[41] S0398 HyperBro HyperBro can run shellcode it injects into a newly created process.[42] S0260 InvisiMole InvisiMole can inject itself into another process to avoid detection including use of a technique called ListPlanting that customizes the sorting algorithm in a ListView structure.[43] S0581 IronNetInjector IronNetInjector can use an IronPython scripts to load a .NET injector to inject a payload into its own or a remote process.[44] S0044 JHUHUGIT JHUHUGIT performs code injection injecting its own functions to browser processes.[45][46] S0201 JPIN JPIN can inject content into lsass.exe to load a module.[47] G0094 Kimsuky Kimsuky has used Win7Elevate to inject malicious code into explorer.exe.[48] S0681 Lizar Lizar can migrate the loader into another process.[49] S1059 metaMain metaMain can inject the loader file, Speech02.db, into a process.[50] S0084 Mis-Type Mis-Type has been injected directly into a running process, including explorer.exe.[51] S1122 Mispadu Mispadu's binary is injected into memory via WriteProcessMemory.[52][53] S0247 NavRAT NavRAT copies itself into a running Internet Explorer process to evade detection.[54] S0198 NETWIRE NETWIRE can inject code into system processes including notepad.exe, svchost.exe, and vbc.exe.[55] S1100 Ninja Ninja has the ability to inject an agent module into a new process and arbitrary shellcode into running processes.[56][57] C0013 Operation Sharpshooter During Operation Sharpshooter, threat actors leveraged embedded shellcode to inject a downloader into the memory of Word.[58] C0014 Operation Wocao During Operation Wocao, threat actors injected code into a selected process, which in turn launches a command as a child process of the original.[59] S0664 Pandora Pandora can start and inject code into a new svchost process.[60] S1050 PcShare The PcShare payload has been injected into the logagent.exe and rdpclip.exe processes.[61] G0068 PLATINUM PLATINUM has used various methods of process injection including hot patching.[47] S0378 PoshC2 PoshC2 contains multiple modules for injecting into processes, such as Invoke-PSInject.[62] S0650 QakBot QakBot can inject itself into processes including explore.exe, Iexplore.exe, Mobsync.exe., and wermgr.exe.[63][64][65][66][67] S0332 Remcos Remcos has a command to hide itself through injecting into another process.[68] S0496 REvil REvil can inject itself into running processes on a compromised host.[69] S0240 ROKRAT ROKRAT can use VirtualAlloc, WriteProcessMemory, and then CreateRemoteThread to execute shellcode within the address space of Notepad.exe.[70] S0446 Ryuk Ryuk has injected itself into remote processes to encrypt files using a combination of VirtualAlloc, WriteProcessMemory, and CreateRemoteThread.[71] S0596 ShadowPad ShadowPad has injected an install module into a newly created process.[72] G0091 Silence Silence has injected a DLL library containing a Trojan into the fwmain32.exe process.[73] S0692 SILENTTRINITY SILENTTRINITY can inject shellcode directly into Excel.exe or a specific process.[74] S0633 Sliver Sliver includes multiple methods to perform process injection to migrate the framework into other, potentially privileged processes on the victim machine.[75][76][77][78] S0533 SLOTHFULMEDIA SLOTHFULMEDIA can inject into running processes on a compromised host.[79] S0226 Smoke Loader Smoke Loader injects into the Internet Explorer process.[80] S0380 StoneDrill StoneDrill has relied on injecting its payload directly into the process memory of the victim's preferred browser.[81] G1018 TA2541 TA2541 has injected malicious code into legitimate .NET related processes including regsvcs.exe, msbuild.exe, and installutil.exe.[82][83] S0266 TrickBot TrickBot has used Nt* Native API functions to inject code into legitimate processes such as wermgr.exe.[84] S0436 TSCookie TSCookie has the ability to inject code into the svchost.exe, iexplorer.exe, explorer.exe, and default browser processes.[85] G0010 Turla Turla has also used PowerSploit's Invoke-ReflectivePEInjection.ps1 to reflectively load a PowerShell payload into a random process on the victim system.[86] G1047 Velvet Ant Velvet Ant initial execution included launching multiple svchost processes and injecting code into them.[87] S0670 WarzoneRAT WarzoneRAT has the ability to inject malicious DLLs into a specific process for privilege escalation.[88] S0579 Waterbear Waterbear can inject decrypted shellcode into the LanmanServer service.[89] S0206 Wiarp Wiarp creates a backdoor through which remote attackers can inject files into running processes.[90] S0176 Wingbird Wingbird performs multiple process injections to hijack system processes and execute malicious code.[91] G0102 Wizard Spider Wizard Spider has used process injection to execute payloads to escalate privileges.[92] S1065 Woody RAT Woody RAT can inject code into a targeted process by writing to the remote memory of an infected system and then create a remote thread.[93] Mitigations ID Mitigation Description M1040 Behavior Prevention on Endpoint Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process. For example, on Windows 10, Attack Surface Reduction (ASR) rules may prevent Office applications from code injection. [94] M1026 Privileged Account Management Utilize Yama (ex: /proc/sys/kernel/yama/ptrace_scope) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor. Detection ID Data Source Data Component Detects DS0022 File File Metadata Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc. File Modification Monitor for changes made to files that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. DS0011 Module Module Load Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. DS0009 Process OS API Execution Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as CreateRemoteThread, SuspendThread/SetThreadContext/ResumeThread, QueueUserAPC/NtQueueApcThread, and those that can be used to modify memory within another process, such as VirtualAllocEx/WriteProcessMemory, may be used for this technique.[95] Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.[96] [97] [98] [99] Process Access Monitor for processes being viewed that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process Metadata Monitor for process memory inconsistencies, such as checking memory ranges against a known copy of the legitimate module.[100] Process Modification Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. References Booz Allen Hamilton. (2016). When The Lights Went Out. Retrieved December 18, 2024. Chen, J. et al. (2019, November). Operation ENDTRADE: TICK’s Multi-Stage Backdoors for Attacking Industries and Stealing Classified Data. Retrieved June 9, 2020. Walter, J. (2020, August 10). Agent Tesla | Old RAT Uses New Tricks to Stay on Top. Retrieved December 11, 2020. Hawley, S. et al. (2023, February 2). Turla: A Galaxy of Opportunity. Retrieved May 15, 2023. Dahan, A. (2017). Operation Cobalt Kitty. Retrieved December 27, 2018. Mercer, W., Rascagneres, P. (2018, January 16). Korea In The Crosshairs. Retrieved May 21, 2018. SEONGSU PARK. (2022, December 27). BlueNoroff introduces new methods bypassing MoTW. Retrieved February 6, 2024. Fraser, N., et al. (2019, August 7). Double DragonAPT41, a dual espionage and cyber crime operation APT41. Retrieved September 23, 2019. Perez, D. et al. (2021, May 27). Re-Checking Your Pulse: Updates on Chinese APT Actors Compromising Pulse Secure VPN Devices. Retrieved February 5, 2024. Cisco Talos. (2024, April 24). ArcaneDoor - New espionage-focused campaign found targeting perimeter network devices. Retrieved January 6, 2025. Hromcova, Z. (2019, October). AT COMMANDS, TOR-BASED COMMUNICATIONS: MEET ATTOR, A FANTASY CREATURE AND ALSO A SPY PLATFORM. Retrieved May 6, 2020. Trend Micro. (2018, November 20). Lazarus Continues Heists, Mounts Attacks on Financial Organizations in Latin America. Retrieved December 3, 2018. Symantec Security Response. (2014, June 30). Dragonfly: Cyberespionage Attacks Against Energy Suppliers. Retrieved April 8, 2016. Slowik, J. (2021, October). THE BAFFLING BERSERK BEAR: A DECADE’S ACTIVITY TARGETING CRITICAL INFRASTRUCTURE. Retrieved December 6, 2021. Savelesky, K., et al. (2019, July 23). ABADBABE 8BADFOOD: Discovering BADHATCH and a Detailed Look at FIN8's Tooling. Retrieved September 8, 2021. Vrabie, V., et al. (2021, March 10). FIN8 Returns with Improved BADHATCH Toolkit. Retrieved September 8, 2021. Cybereason Nocturnus. (2020, July 16). A BAZAR OF TRICKS: FOLLOWING TEAM9’S DEVELOPMENT CYCLES. Retrieved November 18, 2020. Huseyin Can Yuceel. (2022, February 21). TTPs used by BlackByte Ransomware Targeting Critical Infrastructure. Retrieved December 16, 2024. Symantec Threat Hunter Team. (2022, October 21). Exbyte: BlackByte Ransomware Attackers Deploy New Exfiltration Tool. Retrieved December 16, 2024. Microsoft Incident Response. (2023, July 6). The five-day job: A BlackByte ransomware intrusion case study. Retrieved December 16, 2024. Cybereason. (2022, August 17). Bumblebee Loader – The High Road to Enterprise Domain Control. Retrieved August 29, 2022. Grunzweig, J.. (2017, April 20). Cardinal RAT Active for Over Two Years. Retrieved December 8, 2018. Lunghi, D. et al. (2020, February). Uncovering DRBControl. Retrieved November 12, 2021. Dutch Military Intelligence and Security Service (MIVD) & Dutch General Intelligence and Security Service (AIVD). (2024, February 6). Ministry of Defense of the Netherlands uncovers COATHANGER, a stealthy Chinese FortiGate RAT. Retrieved February 7, 2024. Matveeva, V. (2017, August 15). Secrets of Cobalt. Retrieved October 10, 2018. Strategic Cyber LLC. (2017, March 14). Cobalt Strike Manual. Retrieved May 24, 2017. Strategic Cyber LLC. (2020, November 5). Cobalt Strike: Advanced Threat Tactics for Penetration Testers. Retrieved April 13, 2021. DFIR Report. (2021, November 29). CONTInuing the Bazar Ransomware Story. Retrieved September 29, 2022. The BlackBerry Research and Intelligence Team. (2020, November 12). The CostaRicto Campaign: Cyber-Espionage Outsourced. Retrieved May 24, 2021. Lin, M. et al. (2024, February 27). Cutting Edge, Part 3: Investigating Ivanti Connect Secure VPN Exploitation and Persistence Attempts. Retrieved March 1, 2024. TheWover. (2019, May 9). donut. Retrieved March 25, 2022. Mike Stokkel et al. (2024, July 18). APT41 Has Arisen From the DUST. Retrieved September 16, 2024. hasherezade. (2015, November 4). A Technical Look At Dyreza. Retrieved June 15, 2020. Cybleinc. (2020, October 31). Egregor Ransomware – A Deep Dive Into Its Activities and Techniques. Retrieved December 29, 2020. Schroeder, W., Warner, J., Nelson, M. (n.d.). Github PowerShellEmpire. Retrieved April 28, 2016. ESET. (2017, August). Gazing at Gazer: Turla’s new second stage backdoor. Retrieved September 14, 2017. Kaspersky Lab's Global Research & Analysis Team. (2017, August 30). Introducing WhiteBear. Retrieved September 21, 2017. Quinn, J. (2019, March 25). The odd case of a Gh0stRAT variant. Retrieved July 15, 2020. Salem, E. (2021, April 19). Dancing With Shellcodes: Cracking the latest version of Guloader. Retrieved July 7, 2021. US-CERT. (2019, April 10). MAR-10135536-8 – North Korean Trojan: HOPLIGHT. Retrieved April 19, 2019. The Australian Cyber Security Centre (ACSC), the Canadian Centre for Cyber Security (CCCS), the New Zealand National Cyber Security Centre (NZ NCSC), CERT New Zealand, the UK National Cyber Security Centre (UK NCSC) and the US National Cybersecurity and Communications Integration Center (NCCIC). (2018, October 11). Joint report on publicly available hacking tools. Retrieved March 11, 2019. Falcone, R. and Lancaster, T. (2019, May 28). Emissary Panda Attacks Middle East Government Sharepoint Servers. Retrieved July 9, 2019. Hromcova, Z. and Cherpanov, A. (2020, June). INVISIMOLE: THE HIDDEN PART OF THE STORY. Retrieved July 16, 2020. Reichel, D. (2021, February 19). IronNetInjector: Turla’s New Malware Loading Tool. Retrieved February 24, 2021. F-Secure. (2015, September 8). Sofacy Recycles Carberp and Metasploit Code. Retrieved August 3, 2016. Lee, B, et al. (2018, February 28). Sofacy Attacks Multiple Government Entities. Retrieved March 15, 2018. Windows Defender Advanced Threat Hunting Team. (2016, April 29). PLATINUM: Targeted attacks in South and Southeast Asia. Retrieved February 15, 2018. Tarakanov , D.. (2013, September 11). The “Kimsuky” Operation: A North Korean APT?. Retrieved August 13, 2019. BI.ZONE Cyber Threats Research Team. (2021, May 13). From pentest to APT attack: cybercriminal group FIN7 disguises its malware as an ethical hacker’s toolkit. Retrieved February 2, 2022. Ehrlich, A., et al. (2022, September). THE MYSTERY OF METADOR | AN UNATTRIBUTED THREAT HIDING IN TELCOS, ISPS, AND UNIVERSITIES. Retrieved January 23, 2023. Gross, J. (2016, February 23). Operation Dust Storm. Retrieved December 22, 2021. Pedro Tavares (Segurança Informática). (2020, September 15). Threat analysis: The emergent URSA trojan impacts many countries using a sophisticated loader. Retrieved March 13, 2024. SCILabs. (2021, December 23). Cyber Threat Profile Malteiro. Retrieved March 13, 2024. Mercer, W., Rascagneres, P. (2018, May 31). NavRAT Uses US-North Korea Summit As Decoy For Attacks In South Korea. Retrieved June 11, 2018. Lambert, T. (2020, January 29). Intro to Netwire. Retrieved January 7, 2021. Dedola, G. (2022, June 21). APT ToddyCat. Retrieved January 3, 2024. Dedola, G. et al. (2023, October 12). ToddyCat: Keep calm and check logs. Retrieved January 3, 2024. L. O'Donnell. (2019, March 3). RSAC 2019: New Operation Sharpshooter Data Reveals Higher Complexity, Scope. Retrieved September 26, 2022. Dantzig, M. v., Schamper, E. (2019, December 19). Operation Wocao: Shining a light on one of China’s hidden hacking groups. Retrieved October 8, 2020. Lunghi, D. and Lu, K. (2021, April 9). Iron Tiger APT Updates Toolkit With Evolved SysUpdate Malware. Retrieved November 12, 2021. Vrabie, V. (2020, November). Dissecting a Chinese APT Targeting South Eastern Asian Government Institutions. Retrieved September 19, 2022. Nettitude. (2018, July 23). Python Server for PoshC2. Retrieved April 23, 2019. Mendoza, E. et al. (2020, May 25). Qakbot Resurges, Spreads through VBS Files. Retrieved September 27, 2021. Sette, N. et al. (2020, June 4). Qakbot Malware Now Exfiltrating Emails for Sophisticated Thread Hijacking Attacks. Retrieved September 27, 2021. Trend Micro. (2020, December 17). QAKBOT: A decade-old malware still with new tricks. Retrieved November 17, 2024. Kuzmenko, A. et al. (2021, September 2). QakBot technical analysis. Retrieved September 27, 2021. Kenefick, I. et al. (2022, October 12). Black Basta Ransomware Gang Infiltrates Networks via QAKBOT, Brute Ratel, and Cobalt Strike. Retrieved February 6, 2023. Bacurio, F., Salvio, J. (2017, February 14). REMCOS: A New RAT In The Wild. Retrieved November 6, 2018. Saavedra-Morales, J, et al. (2019, October 20). McAfee ATR Analyzes Sodinokibi aka REvil Ransomware-as-a-Service – Crescendo. Retrieved August 5, 2020. Jazi, Hossein. (2021, January 6). Retrohunting APT37: North Korean APT used VBA self decode technique to inject RokRat. Retrieved March 22, 2022. Hanel, A. (2019, January 10). Big Game Hunting with Ryuk: Another Lucrative Targeted Ransomware. Retrieved May 12, 2020. Kaspersky Lab. (2017, August). ShadowPad: popular server management software hit in supply chain attack. Retrieved March 22, 2021. Group-IB. (2018, September). Silence: Moving Into the Darkside. Retrieved May 5, 2020. Salvati, M. (2019, August 6). SILENTTRINITY Modules. Retrieved March 24, 2022. Microsoft Security Experts. (2022, August 24). Looking for the ‘Sliver’ lining: Hunting for emerging command-and-control frameworks. Retrieved March 24, 2025. Cybereason Global SOC and Incident Response Team. (n.d.). Sliver C2 Leveraged by Many Threat Actors. Retrieved March 24, 2025. Kervella, R. (2019, August 4). Cross-platform General Purpose Implant Framework Written in Golang. Retrieved July 30, 2021. BishopFox. (n.d.). Sliver. Retrieved September 15, 2021. DHS/CISA, Cyber National Mission Force. (2020, October 1). Malware Analysis Report (MAR) MAR-10303705-1.v1 – Remote Access Trojan: SLOTHFULMEDIA. Retrieved October 2, 2020. Baker, B., Unterbrink H. (2018, July 03). Smoking Guns - Smoke Loader learned new tricks. Retrieved July 5, 2018. Kaspersky Lab. (2017, March 7). From Shamoon to StoneDrill: Wipers attacking Saudi organizations and beyond. Retrieved March 14, 2019. Larson, S. and Wise, J. (2022, February 15). Charting TA2541's Flight. Retrieved September 12, 2023. Ventura, V. (2021, September 16). Operation Layover: How we tracked an attack on the aviation industry to five years of compromise. Retrieved September 15, 2023. Joe Security. (2020, July 13). TrickBot's new API-Hammering explained. Retrieved September 30, 2021. Tomonaga, S.. (2019, September 18). Malware Used by BlackTech after Network Intrusion. Retrieved May 6, 2020. Faou, M. and Dumont R.. (2019, May 29). A dive into Turla PowerShell usage. Retrieved June 14, 2019. Sygnia Team. (2024, June 3). China-Nexus Threat Group ‘Velvet Ant’ Abuses F5 Load Balancers for Persistence. Retrieved March 14, 2025. Harakhavik, Y. (2020, February 3). Warzone: Behind the enemy lines. Retrieved December 17, 2021. Su, V. et al. (2019, December 11). Waterbear Returns, Uses API Hooking to Evade Security. Retrieved February 22, 2021. Zhou, R. (2012, May 15). Backdoor.Wiarp. Retrieved February 22, 2018. Anthe, C. et al. (2016, December 14). Microsoft Security Intelligence Report Volume 21. Retrieved November 27, 2017. Shilko, J., et al. (2021, October 7). FIN12: The Prolific Ransomware Intrusion Threat Actor That Has Aggressively Pursued Healthcare Targets. Retrieved June 15, 2023. MalwareBytes Threat Intelligence Team. (2022, August 3). Woody RAT: A new feature-rich malware spotted in the wild. Retrieved December 6, 2022. Microsoft. (2021, July 2). Use attack surface reduction rules to prevent malware infection. Retrieved June 24, 2021. Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017. Ligh, M.H. et al.. (2014, July). The Art of Memory Forensics: Detecting Malware and Threats in Windows, Linux, and Mac Memory. Retrieved December 20, 2017. GNU. (2010, February 5). The GNU Accounting Utilities. Retrieved December 20, 2017. Jahoda, M. et al.. (2017, March 14). redhat Security Guide - Chapter 7 - System Auditing. Retrieved December 20, 2017. stderr. (2014, February 14). Detecting Userland Preload Rootkits. Retrieved December 20, 2017. Aliz Hammond. (2019, August 15). Hiding Malicious Code with \"Module Stomping\": Part 1. Retrieved July 14, 2022. × load more results",
    "source_url": "https://attack.mitre.org/techniques/T1055/",
    "vendor_type": "MITRE",
    "source_category": "cybersecurity_expert",
    "quality_score": 99,
    "confidence": 100,
    "expert_level": "expert",
    "has_config_examples": false,
    "config_examples": [],
    "code_blocks": [
      "Invoke-ReflectivePEInjection.ps1"
    ],
    "content_length": 26190,
    "created_at": "2025-09-04T01:55:06.504964"
  }
]